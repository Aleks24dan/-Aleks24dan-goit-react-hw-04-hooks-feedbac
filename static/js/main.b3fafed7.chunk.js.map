{"version":3,"sources":["components/FeedbackBtn/FeedbackBtn.styled.js","components/FeedbackBtn/FeedbackBtn.js","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.js","components/SectionTitle/SectionTitle.styled.js","components/SectionTitle/SectionTitle.js","components/Notification/Notification.styled.js","components/Notification/Notification.js","components/App/App.styled.js","components/App/App.js","index.js"],"names":["Button","styled","button","FeedbackBtn","options","onFeedbackBtn","map","option","type","onClick","StatSection","section","Container","div","Ul","ul","Li","li","Statistics","good","neutral","bad","total","positivePercentage","Title","h2","SectionTitle","title","children","Notification","p","NotificationMes","message","propTypes","PropTypes","string","isRequired","App","useState","feedbacks","setFeedbacks","countTotalFeedback","Object","values","reduce","acc","feedback","Math","round","countPositiveFeedbackPercentage","isSowStatistics","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAEaA,EAASC,IAAOC,OAAV,uQ,OCEJ,SAASC,EAAT,GAAkD,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,cAC7C,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACrB,cAACP,EAAD,CAAQQ,KAAK,SAAsBC,QAAS,kBAAMJ,EAAcE,IAAhE,SACCA,GAD0BA,MCJ1B,I,EAAMG,EAAcT,IAAOU,QAAV,8FAMXC,EAAYX,IAAOY,IAAV,mDAGTC,EAAKb,IAAOc,GAAV,0DAIFC,EAAKf,IAAOgB,GAAV,kRCVA,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,cAACX,EAAD,UAEI,cAACF,EAAD,UACE,eAACI,EAAD,WAEA,eAACE,EAAD,oBAAWG,EAAX,OACA,eAACH,EAAD,uBAAcI,EAAd,OACA,eAACJ,EAAD,mBAAUK,EAAV,OACA,eAACL,EAAD,qBAAYM,EAAZ,OACA,eAACN,EAAD,iCAAwBO,EAAxB,eCrBH,IAAMC,EAAQvB,IAAOwB,GAAV,yFCEH,SAASC,EAAT,GAA4C,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC5C,OACE,oCACE,cAACJ,EAAD,UAAQG,IACPC,K,wBCNMC,EAAe5B,IAAO6B,EAAV,iECEV,SAASC,EAAT,GAAuC,IAAZC,EAAW,EAAXA,QACxC,OAAO,cAACH,EAAD,UAAeG,IAGxBH,EAAaI,UAAY,CACvBD,QAASE,IAAUC,OAAOC,YCNrB,IAAMxB,EAAYX,IAAOY,IAAV,4C,MCMP,SAASwB,IACtB,MAAkCC,mBAAS,CAAEnB,KAAM,EAAGC,QAAS,EAAGC,IAAK,IAAvE,mBAAOkB,EAAP,KAAkBC,EAAlB,KASMC,EAAqB,WACzB,OAAOC,OAAOC,OAAOJ,GAAWK,QAC9B,SAACC,EAAKC,GAAN,OAAmBD,EAAMC,IACzB,IASExB,EAAQmB,IACRlB,EANkC,SAAAD,GAEtC,OADAA,EAAQmB,IACDM,KAAKC,MAAwB,IAAjBT,EAAUpB,KAAcG,GAIlB2B,CAAgC3B,GACrD4B,EAAkB5B,EAAQ,EAChC,OACE,eAAC,EAAD,WACE,cAACI,EAAD,CAAcC,MAAM,wBAApB,SACE,cAACxB,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,cA3Bc,SAAAE,GACpBiC,GAAa,SAAAW,GAAS,kCACjBA,GADiB,kBAEnB5C,EAAS4C,EAAU5C,GAAU,YA2B9B,eAACmB,EAAD,CAAcC,MAAM,aAApB,UACGuB,GACC,cAAChC,EAAD,CACEC,KAAMoB,EAAUpB,KAChBC,QAASmB,EAAUnB,QACnBC,IAAKkB,EAAUlB,IACfC,MAAOA,EACPC,mBAAoBA,KAGtB2B,GAAmB,cAACnB,EAAD,CAAiBC,QAAQ,4BC7CtDoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b3fafed7.chunk.js","sourcesContent":["import styled from '@emotion/styled'\n\nexport const Button = styled.button`\n    margin: 4px;\n    text-transform: uppercase;\n    font-size: 14px;\n    padding: 14px;\n    color: rgb(52 132 80);\n    font-weight: 600;\n    box-shadow: 0px 1px 4px rgb(49 42 85);\n    border-radius: 26px;\n    cursor: pointer;\n`\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button } from './FeedbackBtn.styled';\n\nexport default function FeedbackBtn({ options, onFeedbackBtn }) {\n  return options.map(option => (\n      <Button type=\"button\" key={option} onClick={() => onFeedbackBtn(option)}>\n      {option}\n    </Button>\n  ));\n}\nFeedbackBtn.propTypes = {\n  options: PropTypes.array,\n  handleIncrement: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const StatSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  font-weight: 700;\n`;\n\nexport const Container = styled.div`\n  padding-left: 10px;\n`;\nexport const Ul = styled.ul`\n  padding-inline-start: 0px;\n`;\n\nexport const Li = styled.li`\n  border: 1px solid rgb(65, 32, 80);\n  color: black;\n  margin-bottom: 5px;\n  padding: 10px;\n  width: 300px;\n  border-radius: 5px;\n  list-style: none;\n  color: rgb(52 132 80);\n  font-weight: 600;\n  box-shadow: 0px 1px 4px rgb(49 42 85);\n`;\n","import PropTypes from 'prop-types';\nimport { StatSection } from './Statistics.styled';\nimport { Container } from './Statistics.styled';\nimport { Li, Ul } from './Statistics.styled';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <Container>\n      {\n        <StatSection>\n          <Ul>\n\n          <Li>Good: {good} </Li>\n          <Li>Neutral: {neutral} </Li>\n          <Li>Bad: {bad} </Li>\n          <Li>Total: {total} </Li>\n          <Li>Positive Feedback: {positivePercentage}% </Li>\n          </Ul>\n        </StatSection>\n      }\n    </Container>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number,\n};\n","import styled from '@emotion/styled';\nexport const Title = styled.h2`\n  font-size: 24px;\n  margin-left: 13px;\n  color: #2d012d;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './SectionTitle.styled';\n\nexport default function SectionTitle({ title, children }) {\n  return (\n    <section>\n      <Title>{title}</Title>\n      {children}\n    </section>\n  );\n}\n\nSectionTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n","import styled from '@emotion/styled';\nexport const Notification = styled.p`\nmargin-left: 15px;\ncolor: #2d012d;\n`","import PropTypes from 'prop-types';\nimport { Notification } from './Notification.styled';\n\nexport default function NotificationMes({ message }) {\n  return <Notification>{message}</Notification>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\npadding: 20px;\n`\n","import React, {useState} from 'react';\nimport FeedbackBtn from '../FeedbackBtn/FeedbackBtn';\nimport Statistics from '../Statistics/Statistics';\nimport SectionTitle from '../SectionTitle/SectionTitle';\nimport NotificationMes from '../Notification/Notification';\nimport { Container } from './App.styled';\nimport './App.css';\n\nexport default function App() {\n  const [feedbacks, setFeedbacks] = useState({ good: 0, neutral: 0, bad: 0 });\n\n  const onFeedbackBtn = option => {\n    setFeedbacks(prevState => ({\n      ...prevState,\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  const countTotalFeedback = () => {\n    return Object.values(feedbacks).reduce(\n      (acc, feedback) => acc + feedback,\n      0,\n    );\n  };\n\n  const countPositiveFeedbackPercentage = total => {\n    total = countTotalFeedback();\n    return Math.round((feedbacks.good * 100) / total);\n  };\n\n  const total = countTotalFeedback();\n  const positivePercentage = countPositiveFeedbackPercentage(total);\n  const isSowStatistics = total > 0;\n  return (\n    <Container>\n      <SectionTitle title=\"Please leave feedback\">\n        <FeedbackBtn\n          options={['good', 'neutral', 'bad']}\n          onFeedbackBtn={onFeedbackBtn}\n        />\n      </SectionTitle>\n      <SectionTitle title=\"Statistics\">\n        {isSowStatistics && (\n          <Statistics\n            good={feedbacks.good}\n            neutral={feedbacks.neutral}\n            bad={feedbacks.bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        )}\n        {!isSowStatistics && <NotificationMes message=\"No feedback given\" />}\n      </SectionTitle>\n    </Container>\n  );\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}